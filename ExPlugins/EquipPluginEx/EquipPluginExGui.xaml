<?xml version="1.0" encoding="utf-8"?>
<UserControl x:Class="ExPlugins.EquipPluginEx.EquipPluginExGui" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" xmlns:local="clr-namespace:ExPlugins.EquipPluginEx">
  <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" xmlns:g7xub3rgs3mrgdhhoss="clr-namespace:g7xub3rgS3mrgDhHOSs" DataContext="{x:Static g7xub3rgs3mrgdhhoss:mI67bbriIinDgZ6FkSw.Instance}">
    <TabControl>
      <TabItem Header="General">
        <StackPanel>
          <Label Content="Please make sure that full-geared character level is higher than specified in &#xA;'Level To Stop Picking Up And Equip'!" Background="#FF8B0000" Foreground="#FFF0F8FF" FontSize="15" FontWeight="Black" HorizontalContentAlignment="Center" />
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <GroupBox Header="General" Grid.Row="0" Grid.Column="0">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <CheckBox Grid.Row="0" Grid.Column="0" Background="#FFF0F8FF" Content="DebugMode" ToolTip="Used to get more detailed logs. PLEASE ENABLE THIS BEFORE SENDING LOGS TO THE DEVELOPERS!" IsChecked="{Binding DebugMode, Mode=TwoWay}" />
                <Label Grid.Row="1" Grid.Column="0" Content="Level To Stop Picking Up And Equip:" ToolTip="Plugin will stop picking up and equiping new items at specified level." />
                <controls1:NumericUpDown Grid.Row="1" Grid.Column="1" xmlns:controls1="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" controls1:NumericUpDown.Maximum="100" controls1:NumericUpDown.Minimum="1" controls1:NumericUpDown.Value="{Binding LevelToStopPickUpAndEquip}" />
                <Label Grid.Row="2" Grid.Column="0" Content="Level To Stop Checking Vendors For Gems:" ToolTip="Plugin will stop trying to find needed gems each time bot is in town at specified level." />
                <NumericUpDown Grid.Row="2" Grid.Column="1" p15:NumericUpDown.Maximum="100" p15:NumericUpDown.Minimum="1" p15:NumericUpDown.Value="{Binding Path=LevelToStopCheckingVendorsForGems}" xmlns:p15="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" xmlns="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" />
                <Label Grid.Row="3" Grid.Column="0" Content="Main Hand Colors:" ToolTip="Which colors to look for on Main Hand? Example: RGBB. Such string represents linked colors (no need for R-G-B-B) and bot always try to socket the highest gems in the list from the Gems List in the largest link available on the item. &#xA;WARNING: Bot will check for colors first and for the stats last. &#xA;That means that bot will only upgrade item if new item's sockets are same or better than on the old item." />
                <TextBox Grid.Row="3" Grid.Column="1" MinWidth="30" ToolTip="Which colors to look for on Main Hand? Example: RGBB. Such string represents linked colors (no need for R-G-B-B) and bot always try to socket the highest gems in the list from the Gems List in the largest link available on the item. &#xA;WARNING: Bot will check for colors first and for the stats last. &#xA;That means that bot will only upgrade item if new item's sockets are same or better than on the old item." Text="{Binding Path=MainHandColors}" />
                <Label Grid.Row="4" Grid.Column="0" Content="Off-Hand Colors:" ToolTip="Which colors to look for on Off-Hand? Example: RGBB. Such string represents linked colors (no need for R-G-B-B) and bot always try to socket the highest gems in the list from the Gems List in the largest link available on the item. &#xA;WARNING: Bot will check for colors first and for the stats last. &#xA;That means that bot will only upgrade item if new item's sockets are same or better than on the old item." />
                <TextBox Grid.Row="4" Grid.Column="1" MinWidth="30" ToolTip="Which colors to look for on Off-Hand? Example: RGBB. Such string represents linked colors (no need for R-G-B-B) and bot always try to socket the highest gems in the list from the Gems List in the largest link available on the item. &#xA;WARNING: Bot will check for colors first and for the stats last. &#xA;That means that bot will only upgrade item if new item's sockets are same or better than on the old item." Text="{Binding Path=OffHandColors}" />
                <Label Grid.Row="5" Grid.Column="0" Content="Helmet Colors:" ToolTip="Which colors to look for on Helmet? Example: RGBB. Such string represents linked colors (no need for R-G-B-B) and bot always try to socket the highest gems in the list from the Gems List in the largest link available on the item. &#xA;WARNING: Bot will check for colors first and for the stats last. &#xA;That means that bot will only upgrade item if new item's sockets are same or better than on the old item." />
                <TextBox Grid.Row="5" Grid.Column="1" MinWidth="30" ToolTip="Which colors to look for on Helmet? Example: RGBB. Such string represents linked colors (no need for R-G-B-B) and bot always try to socket the highest gems in the list from the Gems List in the largest link available on the item. &#xA;WARNING: Bot will check for colors first and for the stats last. &#xA;That means that bot will only upgrade item if new item's sockets are same or better than on the old item." Text="{Binding Path=HelmetColors}" />
                <Label Grid.Row="6" Grid.Column="0" Content="Body Armour Colors:" ToolTip="Which colors to look for on Body Armour? Example: RGBB. Such string represents linked colors (no need for R-G-B-B) and bot always try to socket the highest gems in the list from the Gems List in the largest link available on the item. &#xA;WARNING: Bot will check for colors first and for the stats last. &#xA;That means that bot will only upgrade item if new item's sockets are same or better than on the old item." />
                <TextBox Grid.Row="6" Grid.Column="1" MinWidth="30" ToolTip="Which colors to look for on Body Armour? Example: RGBB. Such string represents linked colors (no need for R-G-B-B) and bot always try to socket the highest gems in the list from the Gems List in the largest link available on the item. &#xA;WARNING: Bot will check for colors first and for the stats last. &#xA;That means that bot will only upgrade item if new item's sockets are same or better than on the old item." Text="{Binding Path=BodyArmourColors}" />
                <Label Grid.Row="7" Grid.Column="0" Content="Gloves Colors:" ToolTip="Which colors to look for on Gloves? Example: RGBB. Such string represents linked colors (no need for R-G-B-B) and bot always try to socket the highest gems in the list from the Gems List in the largest link available on the item. &#xA;WARNING: Bot will check for colors first and for the stats last. &#xA;That means that bot will only upgrade item if new item's sockets are same or better than on the old item." />
                <TextBox Grid.Row="7" Grid.Column="1" MinWidth="30" ToolTip="Which colors to look for on Gloves? Example: RGBB. Such string represents linked colors (no need for R-G-B-B) and bot always try to socket the highest gems in the list from the Gems List in the largest link available on the item. &#xA;WARNING: Bot will check for colors first and for the stats last. &#xA;That means that bot will only upgrade item if new item's sockets are same or better than on the old item." Text="{Binding Path=GlovesColors}" />
                <Label Grid.Row="8" Grid.Column="0" Content="Boots Colors:" ToolTip="Which colors to look for on Boots? Example: RGBB. Such string represents linked colors (no need for R-G-B-B) and bot always try to socket the highest gems in the list from the Gems List in the largest link available on the item. &#xA;WARNING: Bot will check for colors first and for the stats last. &#xA;That means that bot will only upgrade item if new item's sockets are same or better than on the old item." />
                <TextBox Grid.Row="8" Grid.Column="1" MinWidth="30" ToolTip="Which colors to look for on Boots? Example: RGBB. Such string represents linked colors (no need for R-G-B-B) and bot always try to socket the highest gems in the list from the Gems List in the largest link available on the item. &#xA;WARNING: Bot will check for colors first and for the stats last. &#xA;That means that bot will only upgrade item if new item's sockets are same or better than on the old item." Text="{Binding Path=BootsColors}" />
              </Grid>
            </GroupBox>
            <GroupBox Header="Weapons" Grid.Row="0" Grid.Column="1">
              <StackPanel>
                <CheckBox Name="MainHandCheckBox" Background="#FFF0F8FF" Content="Should Equip Main Hand" ToolTip="Should bot look for items of this class on the ground and equip them?" IsChecked="{Binding ShouldEquipMainHand, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Daggers" ToolTip="Should bot look for items of this class on the ground and equip them?" IsEnabled="{Binding IsChecked, ElementName=MainHandCheckBox}" IsChecked="{Binding ShouldEquipDaggers, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Claws" ToolTip="Should bot look for items of this class on the ground and equip them?" IsEnabled="{Binding IsChecked, ElementName=MainHandCheckBox}" IsChecked="{Binding ShouldEquipClaws, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Sceptres" ToolTip="Should bot look for items of this class on the ground and equip them?" IsEnabled="{Binding IsChecked, ElementName=MainHandCheckBox}" IsChecked="{Binding ShouldEquipSceptres, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip One Handed Swords" ToolTip="Should bot look for items of this class on the ground and equip them?" IsEnabled="{Binding IsChecked, ElementName=MainHandCheckBox}" IsChecked="{Binding ShouldEquipOneHandedSwords, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip One Handed Axes" ToolTip="Should bot look for items of this class on the ground and equip them?" IsEnabled="{Binding IsChecked, ElementName=MainHandCheckBox}" IsChecked="{Binding ShouldEquipOneHandedAxes, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip One Handed Maces" ToolTip="Should bot look for items of this class on the ground and equip them?" IsEnabled="{Binding IsChecked, ElementName=MainHandCheckBox}" IsChecked="{Binding ShouldEquipOneHandedMaces, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Wands" Margin="0,0,0,15" ToolTip="Should bot look for items of this class on the ground and equip them?" IsEnabled="{Binding IsChecked, ElementName=MainHandCheckBox}" IsChecked="{Binding ShouldEquipWands, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Bows" ToolTip="Should bot look for items of this class on the ground and equip them?" IsEnabled="{Binding IsChecked, ElementName=MainHandCheckBox}" IsChecked="{Binding ShouldEquipBows, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Warstaffs" ToolTip="Should bot look for items of this class on the ground and equip them?" IsEnabled="{Binding IsChecked, ElementName=MainHandCheckBox}" IsChecked="{Binding ShouldEquipWarstaffs, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Staffs" ToolTip="Should bot look for items of this class on the ground and equip them?" IsEnabled="{Binding IsChecked, ElementName=MainHandCheckBox}" IsChecked="{Binding ShouldEquipStaffs, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Two Handed Swords" ToolTip="Should bot look for items of this class on the ground and equip them?" IsEnabled="{Binding IsChecked, ElementName=MainHandCheckBox}" IsChecked="{Binding ShouldEquipTwoHandedSwords, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Two Handed Axes" ToolTip="Should bot look for items of this class on the ground and equip them?" IsEnabled="{Binding IsChecked, ElementName=MainHandCheckBox}" IsChecked="{Binding ShouldEquipTwoHandedAxes, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Two Handed Maces" ToolTip="Should bot look for items of this class on the ground and equip them?" IsEnabled="{Binding IsChecked, ElementName=MainHandCheckBox}" IsChecked="{Binding ShouldEquipTwoHandedMaces, Mode=TwoWay}" />
              </StackPanel>
            </GroupBox>
            <GroupBox Header="Armor" Grid.Row="0" Grid.Column="2">
              <StackPanel>
                <CheckBox Name="OffHandCheckBox" Background="#FFF0F8FF" Content="Should Equip Off-Hand" ToolTip="Should bot look for off-hands on the ground and equip them?" IsChecked="{Binding ShouldEquipOffHand, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Weapon In Off-Hand" ToolTip="Should bot apply rules by which it equips Main Hand Weapons to the Off-Hand?" IsEnabled="{Binding IsChecked, ElementName=OffHandCheckBox}" IsChecked="{Binding ShouldEquipWeaponInOffHand, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Quiver" ToolTip="Should bot look for items of this class on the ground and equip them?" IsEnabled="{Binding IsChecked, ElementName=OffHandCheckBox}" IsChecked="{Binding ShouldEquipQuiver, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Shield" Margin="0,0,0,15" ToolTip="Should bot look for items of this class on the ground and equip them?" IsEnabled="{Binding IsChecked, ElementName=OffHandCheckBox}" IsChecked="{Binding ShouldEquipShield, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Helmet" ToolTip="Should bot look for items of this class on the ground and equip them?" IsChecked="{Binding ShouldEquipHelmet, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Body Armour" ToolTip="Should bot look for items of this class on the ground and equip them?" IsChecked="{Binding ShouldEquipBodyArmour, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Gloves" ToolTip="Should bot look for items of this class on the ground and equip them?" IsChecked="{Binding ShouldEquipGloves, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Boots" ToolTip="Should bot look for items of this class on the ground and equip them?" Margin="0,0,0,10" IsChecked="{Binding ShouldEquipBoots, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Belt" ToolTip="Should bot look for items of this class on the ground and equip them?" IsChecked="{Binding ShouldEquipBelt, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Amulet" ToolTip="Should bot look for items of this class on the ground and equip them?" IsChecked="{Binding ShouldEquipAmulet, Mode=TwoWay}" />
                <CheckBox Background="#FFF0F8FF" Content="Should Equip Rings" ToolTip="Should bot look for items of this class on the ground and equip them?" IsChecked="{Binding ShouldEquipRings, Mode=TwoWay}" />
              </StackPanel>
            </GroupBox>
            <Expander Header="Flasks" Grid.Row="1" Grid.ColumnSpan="3" Grid.Column="0">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ComboBox Grid.Column="0" MinWidth="80" HorizontalContentAlignment="Center" ItemsSource="{x:Static g7xub3rgs3mrgdhhoss:mI67bbriIinDgZ6FkSw.CustomFlaskTypes}" ToolTip="Which flask should bot equip in flask slot 1? Bot will upgrade flasks based on their required level." SelectedItem="{Binding Path=FlaskSlot1}" />
                <ComboBox Grid.Column="1" MinWidth="80" HorizontalContentAlignment="Center" ItemsSource="{x:Static g7xub3rgs3mrgdhhoss:mI67bbriIinDgZ6FkSw.CustomFlaskTypes}" ToolTip="Which flask should bot equip in flask slot 2? Bot will upgrade flasks based on their required level." SelectedItem="{Binding Path=FlaskSlot2}" />
                <ComboBox Grid.Column="2" MinWidth="80" HorizontalContentAlignment="Center" ItemsSource="{x:Static g7xub3rgs3mrgdhhoss:mI67bbriIinDgZ6FkSw.CustomFlaskTypes}" ToolTip="Which flask should bot equip in flask slot 3? Bot will upgrade flasks based on their required level." SelectedItem="{Binding Path=FlaskSlot3}" />
                <ComboBox Grid.Column="3" MinWidth="80" HorizontalContentAlignment="Center" ItemsSource="{x:Static g7xub3rgs3mrgdhhoss:mI67bbriIinDgZ6FkSw.CustomFlaskTypes}" ToolTip="Which flask should bot equip in flask slot 4? Bot will upgrade flasks based on their required level." SelectedItem="{Binding Path=FlaskSlot4}" />
                <ComboBox Grid.Column="4" MinWidth="80" HorizontalContentAlignment="Center" ItemsSource="{x:Static g7xub3rgs3mrgdhhoss:mI67bbriIinDgZ6FkSw.CustomFlaskTypes}" ToolTip="Which flask should bot equip in flask slot 5? Bot will upgrade flasks based on their required level." SelectedItem="{Binding Path=FlaskSlot5}" />
              </Grid>
            </Expander>
            <Expander Header="Unique FullNames To Never Equip" Grid.Row="2" Grid.ColumnSpan="3" Grid.Column="0" ToolTip="Uniques from this list will never be equipped.">
              <DataGrid CanUserResizeColumns="True" HorizontalScrollBarVisibility="Hidden" AutoGenerateColumns="False" Width="Auto" AllowDrop="False" CanUserDeleteRows="True" CanUserAddRows="False" ItemsSource="{Binding UniquesToNeverEquip, Mode=TwoWay, NotifyOnTargetUpdated=True}">
                <DataGrid.Columns>
                  <DataGridTextColumn Header="Name" MinWidth="20" IsReadOnly="True" Width="Auto" SortDirection="Descending" Binding="{Binding Name, Mode=TwoWay, NotifyOnTargetUpdated=True}" />
                </DataGrid.Columns>
              </DataGrid>
            </Expander>
          </Grid>
        </StackPanel>
      </TabItem>
      <TabItem Header="Priorities">
        <StackPanel>
          <Expander Header="Helmet Priorities" ToolTip="Bot will multiply numerical value for each given mod on item by specified value to get total item weight. &#xA;I.e. item has '+50 to maximum life', 'LifeWeight' is 10.1, therefore item weight will be increased by: 50*10.1 = 505. &#xA;This will be done for each mod present in the list. &#xA;When there are two numbers in the mod, bot will get average number and multiply it by weight. &#xA;For example: item has '+1-4 to physical damage to attacks', 'PhysDamageFlatToAttacksWeight' is 1, therefore item weight will be increased by: ((1+4)/2) * 1 = 2.5" DataContext="{Binding HelmetPriorities}">
            <StackPanel>
              <WrapPanel>
                <Label Content="BaseArmorWeight" />
                <TextBox Text="{Binding BaseArmorWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseEvasionWeight" />
                <TextBox Text="{Binding BaseEvasionWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseEnergyShieldWeight" />
                <TextBox Text="{Binding BaseEnergyShieldWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BasePhysDamageWeight" />
                <TextBox Text="{Binding BasePhysDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseFireDamageWeight" />
                <TextBox Text="{Binding BaseFireDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseColdDamageWeight" />
                <TextBox Text="{Binding BaseColdDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseLightningDamageWeight" />
                <TextBox Text="{Binding BaseLightningDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseChaosDamageWeight" />
                <TextBox Text="{Binding BaseChaosDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LifeWeight" />
                <TextBox Text="{Binding LifeWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LifePercentWeight" />
                <TextBox Text="{Binding LifePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ManaWeight" />
                <TextBox Text="{Binding ManaWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ManaPercentWeight" />
                <TextBox Text="{Binding ManaPercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="EnergyShieldWeight" />
                <TextBox Text="{Binding EnergyShieldWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="EnergyShieldPercentWeight" />
                <TextBox Text="{Binding EnergyShieldPercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireResWeight" />
                <TextBox Text="{Binding FireResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdResWeight" />
                <TextBox Text="{Binding ColdResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningResWeight" />
                <TextBox Text="{Binding LightningResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosResWeight" />
                <TextBox Text="{Binding ChaosResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="IntWeight" />
                <TextBox Text="{Binding IntWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="StrWeight" />
                <TextBox Text="{Binding StrWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DexWeight" />
                <TextBox Text="{Binding DexWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamagePercentWeight" />
                <TextBox Text="{Binding DamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="SpellDamage" />
                <TextBox Text="{Binding SpellDamage}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding PhysDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding FireDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamageFlaToAttackstWeight" />
                <TextBox Text="{Binding ColdDamageFlaToAttackstWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding LightningDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding ChaosDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding PhysDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding FireDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamageFlaToSpellstWeight" />
                <TextBox Text="{Binding ColdDamageFlaToSpellstWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding LightningDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding ChaosDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamagePercentWeight" />
                <TextBox Text="{Binding PhysDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamagePercentWeight" />
                <TextBox Text="{Binding ColdDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamagePercentWeight" />
                <TextBox Text="{Binding FireDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamagePercentWeight" />
                <TextBox Text="{Binding LightningDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamagePercentWeight" />
                <TextBox Text="{Binding ChaosDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ElementalDamagePercentToAttacksWeight" />
                <TextBox Text="{Binding ElementalDamagePercentToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="CritMultiWeight" />
                <TextBox Text="{Binding CritMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="AttackSpeedWeight" />
                <TextBox Text="{Binding AttackSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="CastSpeedWeight" />
                <TextBox Text="{Binding CastSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageOverTimeWeight" />
                <TextBox Text="{Binding DamageOverTimeWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageWithBleedingWeight" />
                <TextBox Text="{Binding DamageWithBleedingWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageWithPoisonWeight" />
                <TextBox Text="{Binding DamageWithPoisonWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDoTMultiWeight" />
                <TextBox Text="{Binding ChaosDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDoTMultiWeight" />
                <TextBox Text="{Binding FireDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDoTMultiWeight" />
                <TextBox Text="{Binding ColdDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDoTMultiWeight" />
                <TextBox Text="{Binding PhysDoTMultiWeight}" />
              </WrapPanel>
            </StackPanel>
          </Expander>
          <Expander Header="Body armor priorities" ToolTip="Bot will multiply numerical value for each given mod on item by specified value to get total item weight. &#xA;I.e. item has '+50 to maximum life', 'LifeWeight' is 10.1, therefore item weight will be increased by: 50*10.1 = 505. &#xA;This will be done for each mod present in the list. &#xA;When there are two numbers in the mod, bot will get average number and multiply it by weight. &#xA;For example: item has '+1-4 to physical damage to attacks', 'PhysDamageFlatToAttacksWeight' is 1, therefore item weight will be increased by: ((1+4)/2) * 1 = 2.5" DataContext="{Binding BodyArmourGems}">
            <StackPanel>
              <WrapPanel>
                <Label Content="BaseArmorWeight" />
                <TextBox Text="{Binding BaseArmorWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseEvasionWeight" />
                <TextBox Text="{Binding BaseEvasionWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseEnergyShieldWeight" />
                <TextBox Text="{Binding BaseEnergyShieldWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BasePhysDamageWeight" />
                <TextBox Text="{Binding BasePhysDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseFireDamageWeight" />
                <TextBox Text="{Binding BaseFireDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseColdDamageWeight" />
                <TextBox Text="{Binding BaseColdDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseLightningDamageWeight" />
                <TextBox Text="{Binding BaseLightningDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseChaosDamageWeight" />
                <TextBox Text="{Binding BaseChaosDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LifeWeight" />
                <TextBox Text="{Binding LifeWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LifePercentWeight" />
                <TextBox Text="{Binding LifePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ManaWeight" />
                <TextBox Text="{Binding ManaWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ManaPercentWeight" />
                <TextBox Text="{Binding ManaPercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="EnergyShieldWeight" />
                <TextBox Text="{Binding EnergyShieldWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="EnergyShieldPercentWeight" />
                <TextBox Text="{Binding EnergyShieldPercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireResWeight" />
                <TextBox Text="{Binding FireResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdResWeight" />
                <TextBox Text="{Binding ColdResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningResWeight" />
                <TextBox Text="{Binding LightningResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosResWeight" />
                <TextBox Text="{Binding ChaosResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="IntWeight" />
                <TextBox Text="{Binding IntWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="StrWeight" />
                <TextBox Text="{Binding StrWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DexWeight" />
                <TextBox Text="{Binding DexWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamagePercentWeight" />
                <TextBox Text="{Binding DamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="SpellDamage" />
                <TextBox Text="{Binding SpellDamage}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding PhysDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding FireDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamageFlaToAttackstWeight" />
                <TextBox Text="{Binding ColdDamageFlaToAttackstWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding LightningDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding ChaosDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding PhysDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding FireDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamageFlaToSpellstWeight" />
                <TextBox Text="{Binding ColdDamageFlaToSpellstWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding LightningDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding ChaosDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamagePercentWeight" />
                <TextBox Text="{Binding PhysDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamagePercentWeight" />
                <TextBox Text="{Binding ColdDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamagePercentWeight" />
                <TextBox Text="{Binding FireDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamagePercentWeight" />
                <TextBox Text="{Binding LightningDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamagePercentWeight" />
                <TextBox Text="{Binding ChaosDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ElementalDamagePercentToAttacksWeight" />
                <TextBox Text="{Binding ElementalDamagePercentToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="CritMultiWeight" />
                <TextBox Text="{Binding CritMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="AttackSpeedWeight" />
                <TextBox Text="{Binding AttackSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="CastSpeedWeight" />
                <TextBox Text="{Binding CastSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageOverTimeWeight" />
                <TextBox Text="{Binding DamageOverTimeWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageWithBleedingWeight" />
                <TextBox Text="{Binding DamageWithBleedingWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageWithPoisonWeight" />
                <TextBox Text="{Binding DamageWithPoisonWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDoTMultiWeight" />
                <TextBox Text="{Binding ChaosDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDoTMultiWeight" />
                <TextBox Text="{Binding FireDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDoTMultiWeight" />
                <TextBox Text="{Binding ColdDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDoTMultiWeight" />
                <TextBox Text="{Binding PhysDoTMultiWeight}" />
              </WrapPanel>
            </StackPanel>
          </Expander>
          <Expander Header="Gloves Priorities" ToolTip="Bot will multiply numerical value for each given mod on item by specified value to get total item weight. &#xA;I.e. item has '+50 to maximum life', 'LifeWeight' is 10.1, therefore item weight will be increased by: 50*10.1 = 505. &#xA;This will be done for each mod present in the list. &#xA;When there are two numbers in the mod, bot will get average number and multiply it by weight. &#xA;For example: item has '+1-4 to physical damage to attacks', 'PhysDamageFlatToAttacksWeight' is 1, therefore item weight will be increased by: ((1+4)/2) * 1 = 2.5" DataContext="{Binding GlovesPriorities}">
            <StackPanel>
              <WrapPanel>
                <Label Content="BaseArmorWeight" />
                <TextBox Text="{Binding BaseArmorWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseEvasionWeight" />
                <TextBox Text="{Binding BaseEvasionWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseEnergyShieldWeight" />
                <TextBox Text="{Binding BaseEnergyShieldWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BasePhysDamageWeight" />
                <TextBox Text="{Binding BasePhysDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseFireDamageWeight" />
                <TextBox Text="{Binding BaseFireDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseColdDamageWeight" />
                <TextBox Text="{Binding BaseColdDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseLightningDamageWeight" />
                <TextBox Text="{Binding BaseLightningDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseChaosDamageWeight" />
                <TextBox Text="{Binding BaseChaosDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LifeWeight" />
                <TextBox Text="{Binding LifeWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LifePercentWeight" />
                <TextBox Text="{Binding LifePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ManaWeight" />
                <TextBox Text="{Binding ManaWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ManaPercentWeight" />
                <TextBox Text="{Binding ManaPercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="EnergyShieldWeight" />
                <TextBox Text="{Binding EnergyShieldWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="EnergyShieldPercentWeight" />
                <TextBox Text="{Binding EnergyShieldPercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireResWeight" />
                <TextBox Text="{Binding FireResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdResWeight" />
                <TextBox Text="{Binding ColdResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningResWeight" />
                <TextBox Text="{Binding LightningResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosResWeight" />
                <TextBox Text="{Binding ChaosResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="IntWeight" />
                <TextBox Text="{Binding IntWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="StrWeight" />
                <TextBox Text="{Binding StrWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DexWeight" />
                <TextBox Text="{Binding DexWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamagePercentWeight" />
                <TextBox Text="{Binding DamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="SpellDamage" />
                <TextBox Text="{Binding SpellDamage}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding PhysDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding FireDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamageFlaToAttackstWeight" />
                <TextBox Text="{Binding ColdDamageFlaToAttackstWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding LightningDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding ChaosDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding PhysDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding FireDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamageFlaToSpellstWeight" />
                <TextBox Text="{Binding ColdDamageFlaToSpellstWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding LightningDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding ChaosDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamagePercentWeight" />
                <TextBox Text="{Binding PhysDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamagePercentWeight" />
                <TextBox Text="{Binding ColdDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamagePercentWeight" />
                <TextBox Text="{Binding FireDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamagePercentWeight" />
                <TextBox Text="{Binding LightningDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamagePercentWeight" />
                <TextBox Text="{Binding ChaosDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ElementalDamagePercentToAttacksWeight" />
                <TextBox Text="{Binding ElementalDamagePercentToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="CritMultiWeight" />
                <TextBox Text="{Binding CritMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="AttackSpeedWeight" />
                <TextBox Text="{Binding AttackSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="CastSpeedWeight" />
                <TextBox Text="{Binding CastSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageOverTimeWeight" />
                <TextBox Text="{Binding DamageOverTimeWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageWithBleedingWeight" />
                <TextBox Text="{Binding DamageWithBleedingWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageWithPoisonWeight" />
                <TextBox Text="{Binding DamageWithPoisonWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDoTMultiWeight" />
                <TextBox Text="{Binding ChaosDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDoTMultiWeight" />
                <TextBox Text="{Binding FireDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDoTMultiWeight" />
                <TextBox Text="{Binding ColdDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDoTMultiWeight" />
                <TextBox Text="{Binding PhysDoTMultiWeight}" />
              </WrapPanel>
            </StackPanel>
          </Expander>
          <Expander Header="Boots Priorities" ToolTip="Bot will multiply numerical value for each given mod on item by specified value to get total item weight. &#xA;I.e. item has '+50 to maximum life', 'LifeWeight' is 10.1, therefore item weight will be increased by: 50*10.1 = 505. &#xA;This will be done for each mod present in the list. &#xA;When there are two numbers in the mod, bot will get average number and multiply it by weight. &#xA;For example: item has '+1-4 to physical damage to attacks', 'PhysDamageFlatToAttacksWeight' is 1, therefore item weight will be increased by: ((1+4)/2) * 1 = 2.5" DataContext="{Binding BootsPriorities}">
            <StackPanel>
              <WrapPanel>
                <Label Content="BaseArmorWeight" />
                <TextBox Text="{Binding BaseArmorWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseEvasionWeight" />
                <TextBox Text="{Binding BaseEvasionWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseEnergyShieldWeight" />
                <TextBox Text="{Binding BaseEnergyShieldWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="MovementSpeedWeight" />
                <TextBox Text="{Binding MovementSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BasePhysDamageWeight" />
                <TextBox Text="{Binding BasePhysDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseFireDamageWeight" />
                <TextBox Text="{Binding BaseFireDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseColdDamageWeight" />
                <TextBox Text="{Binding BaseColdDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseLightningDamageWeight" />
                <TextBox Text="{Binding BaseLightningDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseChaosDamageWeight" />
                <TextBox Text="{Binding BaseChaosDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LifeWeight" />
                <TextBox Text="{Binding LifeWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LifePercentWeight" />
                <TextBox Text="{Binding LifePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ManaWeight" />
                <TextBox Text="{Binding ManaWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ManaPercentWeight" />
                <TextBox Text="{Binding ManaPercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="EnergyShieldWeight" />
                <TextBox Text="{Binding EnergyShieldWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="EnergyShieldPercentWeight" />
                <TextBox Text="{Binding EnergyShieldPercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireResWeight" />
                <TextBox Text="{Binding FireResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdResWeight" />
                <TextBox Text="{Binding ColdResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningResWeight" />
                <TextBox Text="{Binding LightningResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosResWeight" />
                <TextBox Text="{Binding ChaosResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="IntWeight" />
                <TextBox Text="{Binding IntWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="StrWeight" />
                <TextBox Text="{Binding StrWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DexWeight" />
                <TextBox Text="{Binding DexWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamagePercentWeight" />
                <TextBox Text="{Binding DamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="SpellDamage" />
                <TextBox Text="{Binding SpellDamage}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding PhysDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding FireDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamageFlaToAttackstWeight" />
                <TextBox Text="{Binding ColdDamageFlaToAttackstWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding LightningDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding ChaosDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding PhysDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding FireDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamageFlaToSpellstWeight" />
                <TextBox Text="{Binding ColdDamageFlaToSpellstWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding LightningDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding ChaosDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamagePercentWeight" />
                <TextBox Text="{Binding PhysDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamagePercentWeight" />
                <TextBox Text="{Binding ColdDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamagePercentWeight" />
                <TextBox Text="{Binding FireDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamagePercentWeight" />
                <TextBox Text="{Binding LightningDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamagePercentWeight" />
                <TextBox Text="{Binding ChaosDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ElementalDamagePercentToAttacksWeight" />
                <TextBox Text="{Binding ElementalDamagePercentToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="CritMultiWeight" />
                <TextBox Text="{Binding CritMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="AttackSpeedWeight" />
                <TextBox Text="{Binding AttackSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="CastSpeedWeight" />
                <TextBox Text="{Binding CastSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageOverTimeWeight" />
                <TextBox Text="{Binding DamageOverTimeWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageWithBleedingWeight" />
                <TextBox Text="{Binding DamageWithBleedingWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageWithPoisonWeight" />
                <TextBox Text="{Binding DamageWithPoisonWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDoTMultiWeight" />
                <TextBox Text="{Binding ChaosDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDoTMultiWeight" />
                <TextBox Text="{Binding FireDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDoTMultiWeight" />
                <TextBox Text="{Binding ColdDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDoTMultiWeight" />
                <TextBox Text="{Binding PhysDoTMultiWeight}" />
              </WrapPanel>
            </StackPanel>
          </Expander>
          <Expander Header="MainHand Priorities" ToolTip="Bot will multiply numerical value for each given mod on item by specified value to get total item weight. &#xA;I.e. item has '+50 to maximum life', 'LifeWeight' is 10.1, therefore item weight will be increased by: 50*10.1 = 505. &#xA;This will be done for each mod present in the list. &#xA;When there are two numbers in the mod, bot will get average number and multiply it by weight. &#xA;For example: item has '+1-4 to physical damage to attacks', 'PhysDamageFlatToAttacksWeight' is 1, therefore item weight will be increased by: ((1+4)/2) * 1 = 2.5" DataContext="{Binding MainHandPriorities}">
            <StackPanel>
              <WrapPanel>
                <Label Content="BaseArmorWeight" />
                <TextBox Text="{Binding BaseArmorWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseEvasionWeight" />
                <TextBox Text="{Binding BaseEvasionWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseEnergyShieldWeight" />
                <TextBox Text="{Binding BaseEnergyShieldWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BasePhysDamageWeight" />
                <TextBox Text="{Binding BasePhysDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseFireDamageWeight" />
                <TextBox Text="{Binding BaseFireDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseColdDamageWeight" />
                <TextBox Text="{Binding BaseColdDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseLightningDamageWeight" />
                <TextBox Text="{Binding BaseLightningDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseChaosDamageWeight" />
                <TextBox Text="{Binding BaseChaosDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LifeWeight" />
                <TextBox Text="{Binding LifeWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LifePercentWeight" />
                <TextBox Text="{Binding LifePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ManaWeight" />
                <TextBox Text="{Binding ManaWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ManaPercentWeight" />
                <TextBox Text="{Binding ManaPercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="EnergyShieldWeight" />
                <TextBox Text="{Binding EnergyShieldWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="EnergyShieldPercentWeight" />
                <TextBox Text="{Binding EnergyShieldPercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireResWeight" />
                <TextBox Text="{Binding FireResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdResWeight" />
                <TextBox Text="{Binding ColdResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningResWeight" />
                <TextBox Text="{Binding LightningResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosResWeight" />
                <TextBox Text="{Binding ChaosResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="IntWeight" />
                <TextBox Text="{Binding IntWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="StrWeight" />
                <TextBox Text="{Binding StrWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DexWeight" />
                <TextBox Text="{Binding DexWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamagePercentWeight" />
                <TextBox Text="{Binding DamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="SpellDamage" />
                <TextBox Text="{Binding SpellDamage}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding PhysDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding FireDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamageFlaToAttackstWeight" />
                <TextBox Text="{Binding ColdDamageFlaToAttackstWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding LightningDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding ChaosDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding PhysDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding FireDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamageFlaToSpellstWeight" />
                <TextBox Text="{Binding ColdDamageFlaToSpellstWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding LightningDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding ChaosDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamagePercentWeight" />
                <TextBox Text="{Binding PhysDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamagePercentWeight" />
                <TextBox Text="{Binding ColdDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamagePercentWeight" />
                <TextBox Text="{Binding FireDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamagePercentWeight" />
                <TextBox Text="{Binding LightningDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamagePercentWeight" />
                <TextBox Text="{Binding ChaosDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ElementalDamagePercentToAttacksWeight" />
                <TextBox Text="{Binding ElementalDamagePercentToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="CritMultiWeight" />
                <TextBox Text="{Binding CritMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="AttackSpeedWeight" />
                <TextBox Text="{Binding AttackSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="CastSpeedWeight" />
                <TextBox Text="{Binding CastSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageOverTimeWeight" />
                <TextBox Text="{Binding DamageOverTimeWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageWithBleedingWeight" />
                <TextBox Text="{Binding DamageWithBleedingWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageWithPoisonWeight" />
                <TextBox Text="{Binding DamageWithPoisonWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDoTMultiWeight" />
                <TextBox Text="{Binding ChaosDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDoTMultiWeight" />
                <TextBox Text="{Binding FireDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDoTMultiWeight" />
                <TextBox Text="{Binding ColdDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDoTMultiWeight" />
                <TextBox Text="{Binding PhysDoTMultiWeight}" />
              </WrapPanel>
            </StackPanel>
          </Expander>
          <Expander Header="OffHand Priorities" ToolTip="Bot will multiply numerical value for each given mod on item by specified value to get total item weight. &#xA;I.e. item has '+50 to maximum life', 'LifeWeight' is 10.1, therefore item weight will be increased by: 50*10.1 = 505. &#xA;This will be done for each mod present in the list. &#xA;When there are two numbers in the mod, bot will get average number and multiply it by weight. &#xA;For example: item has '+1-4 to physical damage to attacks', 'PhysDamageFlatToAttacksWeight' is 1, therefore item weight will be increased by: ((1+4)/2) * 1 = 2.5" DataContext="{Binding OffHandPriorities}">
            <StackPanel>
              <WrapPanel>
                <Label Content="BaseArmorWeight" />
                <TextBox Text="{Binding BaseArmorWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseEvasionWeight" />
                <TextBox Text="{Binding BaseEvasionWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseEnergyShieldWeight" />
                <TextBox Text="{Binding BaseEnergyShieldWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BasePhysDamageWeight" />
                <TextBox Text="{Binding BasePhysDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseFireDamageWeight" />
                <TextBox Text="{Binding BaseFireDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseColdDamageWeight" />
                <TextBox Text="{Binding BaseColdDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseLightningDamageWeight" />
                <TextBox Text="{Binding BaseLightningDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseChaosDamageWeight" />
                <TextBox Text="{Binding BaseChaosDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LifeWeight" />
                <TextBox Text="{Binding LifeWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LifePercentWeight" />
                <TextBox Text="{Binding LifePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ManaWeight" />
                <TextBox Text="{Binding ManaWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ManaPercentWeight" />
                <TextBox Text="{Binding ManaPercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="EnergyShieldWeight" />
                <TextBox Text="{Binding EnergyShieldWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="EnergyShieldPercentWeight" />
                <TextBox Text="{Binding EnergyShieldPercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireResWeight" />
                <TextBox Text="{Binding FireResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdResWeight" />
                <TextBox Text="{Binding ColdResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningResWeight" />
                <TextBox Text="{Binding LightningResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosResWeight" />
                <TextBox Text="{Binding ChaosResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="IntWeight" />
                <TextBox Text="{Binding IntWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="StrWeight" />
                <TextBox Text="{Binding StrWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DexWeight" />
                <TextBox Text="{Binding DexWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamagePercentWeight" />
                <TextBox Text="{Binding DamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="SpellDamage" />
                <TextBox Text="{Binding SpellDamage}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding PhysDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding FireDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamageFlaToAttackstWeight" />
                <TextBox Text="{Binding ColdDamageFlaToAttackstWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding LightningDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding ChaosDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding PhysDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding FireDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamageFlaToSpellstWeight" />
                <TextBox Text="{Binding ColdDamageFlaToSpellstWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding LightningDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding ChaosDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamagePercentWeight" />
                <TextBox Text="{Binding PhysDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamagePercentWeight" />
                <TextBox Text="{Binding ColdDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamagePercentWeight" />
                <TextBox Text="{Binding FireDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamagePercentWeight" />
                <TextBox Text="{Binding LightningDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamagePercentWeight" />
                <TextBox Text="{Binding ChaosDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ElementalDamagePercentToAttacksWeight" />
                <TextBox Text="{Binding ElementalDamagePercentToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="CritMultiWeight" />
                <TextBox Text="{Binding CritMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="AttackSpeedWeight" />
                <TextBox Text="{Binding AttackSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="CastSpeedWeight" />
                <TextBox Text="{Binding CastSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageOverTimeWeight" />
                <TextBox Text="{Binding DamageOverTimeWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageWithBleedingWeight" />
                <TextBox Text="{Binding DamageWithBleedingWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageWithPoisonWeight" />
                <TextBox Text="{Binding DamageWithPoisonWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDoTMultiWeight" />
                <TextBox Text="{Binding ChaosDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDoTMultiWeight" />
                <TextBox Text="{Binding FireDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDoTMultiWeight" />
                <TextBox Text="{Binding ColdDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDoTMultiWeight" />
                <TextBox Text="{Binding PhysDoTMultiWeight}" />
              </WrapPanel>
            </StackPanel>
          </Expander>
          <Expander Header="Belt Priorities" ToolTip="Bot will multiply numerical value for each given mod on item by specified value to get total item weight. &#xA;I.e. item has '+50 to maximum life', 'LifeWeight' is 10.1, therefore item weight will be increased by: 50*10.1 = 505. &#xA;This will be done for each mod present in the list. &#xA;When there are two numbers in the mod, bot will get average number and multiply it by weight. &#xA;For example: item has '+1-4 to physical damage to attacks', 'PhysDamageFlatToAttacksWeight' is 1, therefore item weight will be increased by: ((1+4)/2) * 1 = 2.5" DataContext="{Binding BeltPriorities}">
            <StackPanel>
              <WrapPanel>
                <Label Content="BaseArmorWeight" />
                <TextBox Text="{Binding BaseArmorWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseEvasionWeight" />
                <TextBox Text="{Binding BaseEvasionWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseEnergyShieldWeight" />
                <TextBox Text="{Binding BaseEnergyShieldWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BasePhysDamageWeight" />
                <TextBox Text="{Binding BasePhysDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseFireDamageWeight" />
                <TextBox Text="{Binding BaseFireDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseColdDamageWeight" />
                <TextBox Text="{Binding BaseColdDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseLightningDamageWeight" />
                <TextBox Text="{Binding BaseLightningDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseChaosDamageWeight" />
                <TextBox Text="{Binding BaseChaosDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LifeWeight" />
                <TextBox Text="{Binding LifeWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LifePercentWeight" />
                <TextBox Text="{Binding LifePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ManaWeight" />
                <TextBox Text="{Binding ManaWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ManaPercentWeight" />
                <TextBox Text="{Binding ManaPercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="EnergyShieldWeight" />
                <TextBox Text="{Binding EnergyShieldWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="EnergyShieldPercentWeight" />
                <TextBox Text="{Binding EnergyShieldPercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireResWeight" />
                <TextBox Text="{Binding FireResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdResWeight" />
                <TextBox Text="{Binding ColdResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningResWeight" />
                <TextBox Text="{Binding LightningResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosResWeight" />
                <TextBox Text="{Binding ChaosResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="IntWeight" />
                <TextBox Text="{Binding IntWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="StrWeight" />
                <TextBox Text="{Binding StrWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DexWeight" />
                <TextBox Text="{Binding DexWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamagePercentWeight" />
                <TextBox Text="{Binding DamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="SpellDamage" />
                <TextBox Text="{Binding SpellDamage}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding PhysDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding FireDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamageFlaToAttackstWeight" />
                <TextBox Text="{Binding ColdDamageFlaToAttackstWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding LightningDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding ChaosDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding PhysDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding FireDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamageFlaToSpellstWeight" />
                <TextBox Text="{Binding ColdDamageFlaToSpellstWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding LightningDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding ChaosDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamagePercentWeight" />
                <TextBox Text="{Binding PhysDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamagePercentWeight" />
                <TextBox Text="{Binding ColdDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamagePercentWeight" />
                <TextBox Text="{Binding FireDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamagePercentWeight" />
                <TextBox Text="{Binding LightningDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamagePercentWeight" />
                <TextBox Text="{Binding ChaosDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ElementalDamagePercentToAttacksWeight" />
                <TextBox Text="{Binding ElementalDamagePercentToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="CritMultiWeight" />
                <TextBox Text="{Binding CritMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="AttackSpeedWeight" />
                <TextBox Text="{Binding AttackSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="CastSpeedWeight" />
                <TextBox Text="{Binding CastSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageOverTimeWeight" />
                <TextBox Text="{Binding DamageOverTimeWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageWithBleedingWeight" />
                <TextBox Text="{Binding DamageWithBleedingWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageWithPoisonWeight" />
                <TextBox Text="{Binding DamageWithPoisonWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDoTMultiWeight" />
                <TextBox Text="{Binding ChaosDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDoTMultiWeight" />
                <TextBox Text="{Binding FireDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDoTMultiWeight" />
                <TextBox Text="{Binding ColdDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDoTMultiWeight" />
                <TextBox Text="{Binding PhysDoTMultiWeight}" />
              </WrapPanel>
            </StackPanel>
          </Expander>
          <Expander Header="Amulet Priorities" ToolTip="Bot will multiply numerical value for each given mod on item by specified value to get total item weight. &#xA;I.e. item has '+50 to maximum life', 'LifeWeight' is 10.1, therefore item weight will be increased by: 50*10.1 = 505. &#xA;This will be done for each mod present in the list. &#xA;When there are two numbers in the mod, bot will get average number and multiply it by weight. &#xA;For example: item has '+1-4 to physical damage to attacks', 'PhysDamageFlatToAttacksWeight' is 1, therefore item weight will be increased by: ((1+4)/2) * 1 = 2.5" DataContext="{Binding AmuletPriorities}">
            <StackPanel>
              <WrapPanel>
                <Label Content="BaseArmorWeight" />
                <TextBox Text="{Binding BaseArmorWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseEvasionWeight" />
                <TextBox Text="{Binding BaseEvasionWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseEnergyShieldWeight" />
                <TextBox Text="{Binding BaseEnergyShieldWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BasePhysDamageWeight" />
                <TextBox Text="{Binding BasePhysDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseFireDamageWeight" />
                <TextBox Text="{Binding BaseFireDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseColdDamageWeight" />
                <TextBox Text="{Binding BaseColdDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseLightningDamageWeight" />
                <TextBox Text="{Binding BaseLightningDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseChaosDamageWeight" />
                <TextBox Text="{Binding BaseChaosDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LifeWeight" />
                <TextBox Text="{Binding LifeWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LifePercentWeight" />
                <TextBox Text="{Binding LifePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ManaWeight" />
                <TextBox Text="{Binding ManaWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ManaPercentWeight" />
                <TextBox Text="{Binding ManaPercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="EnergyShieldWeight" />
                <TextBox Text="{Binding EnergyShieldWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="EnergyShieldPercentWeight" />
                <TextBox Text="{Binding EnergyShieldPercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireResWeight" />
                <TextBox Text="{Binding FireResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdResWeight" />
                <TextBox Text="{Binding ColdResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningResWeight" />
                <TextBox Text="{Binding LightningResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosResWeight" />
                <TextBox Text="{Binding ChaosResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="IntWeight" />
                <TextBox Text="{Binding IntWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="StrWeight" />
                <TextBox Text="{Binding StrWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DexWeight" />
                <TextBox Text="{Binding DexWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamagePercentWeight" />
                <TextBox Text="{Binding DamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="SpellDamage" />
                <TextBox Text="{Binding SpellDamage}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding PhysDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding FireDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamageFlaToAttackstWeight" />
                <TextBox Text="{Binding ColdDamageFlaToAttackstWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding LightningDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding ChaosDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding PhysDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding FireDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamageFlaToSpellstWeight" />
                <TextBox Text="{Binding ColdDamageFlaToSpellstWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding LightningDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding ChaosDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamagePercentWeight" />
                <TextBox Text="{Binding PhysDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamagePercentWeight" />
                <TextBox Text="{Binding ColdDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamagePercentWeight" />
                <TextBox Text="{Binding FireDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamagePercentWeight" />
                <TextBox Text="{Binding LightningDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamagePercentWeight" />
                <TextBox Text="{Binding ChaosDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ElementalDamagePercentToAttacksWeight" />
                <TextBox Text="{Binding ElementalDamagePercentToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="CritMultiWeight" />
                <TextBox Text="{Binding CritMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="AttackSpeedWeight" />
                <TextBox Text="{Binding AttackSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="CastSpeedWeight" />
                <TextBox Text="{Binding CastSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageOverTimeWeight" />
                <TextBox Text="{Binding DamageOverTimeWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageWithBleedingWeight" />
                <TextBox Text="{Binding DamageWithBleedingWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageWithPoisonWeight" />
                <TextBox Text="{Binding DamageWithPoisonWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDoTMultiWeight" />
                <TextBox Text="{Binding ChaosDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDoTMultiWeight" />
                <TextBox Text="{Binding FireDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDoTMultiWeight" />
                <TextBox Text="{Binding ColdDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDoTMultiWeight" />
                <TextBox Text="{Binding PhysDoTMultiWeight}" />
              </WrapPanel>
            </StackPanel>
          </Expander>
          <Expander Header="Rings Priorities" ToolTip="Bot will multiply numerical value for each given mod on item by specified value to get total item weight. &#xA;I.e. item has '+50 to maximum life', 'LifeWeight' is 10.1, therefore item weight will be increased by: 50*10.1 = 505. &#xA;This will be done for each mod present in the list. &#xA;When there are two numbers in the mod, bot will get average number and multiply it by weight. &#xA;For example: item has '+1-4 to physical damage to attacks', 'PhysDamageFlatToAttacksWeight' is 1, therefore item weight will be increased by: ((1+4)/2) * 1 = 2.5" DataContext="{Binding RingsPriorities}">
            <StackPanel>
              <WrapPanel>
                <Label Content="BaseArmorWeight" />
                <TextBox Text="{Binding BaseArmorWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseEvasionWeight" />
                <TextBox Text="{Binding BaseEvasionWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseEnergyShieldWeight" />
                <TextBox Text="{Binding BaseEnergyShieldWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BasePhysDamageWeight" />
                <TextBox Text="{Binding BasePhysDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseFireDamageWeight" />
                <TextBox Text="{Binding BaseFireDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseColdDamageWeight" />
                <TextBox Text="{Binding BaseColdDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseLightningDamageWeight" />
                <TextBox Text="{Binding BaseLightningDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="BaseChaosDamageWeight" />
                <TextBox Text="{Binding BaseChaosDamageWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LifeWeight" />
                <TextBox Text="{Binding LifeWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LifePercentWeight" />
                <TextBox Text="{Binding LifePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ManaWeight" />
                <TextBox Text="{Binding ManaWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ManaPercentWeight" />
                <TextBox Text="{Binding ManaPercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="EnergyShieldWeight" />
                <TextBox Text="{Binding EnergyShieldWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="EnergyShieldPercentWeight" />
                <TextBox Text="{Binding EnergyShieldPercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireResWeight" />
                <TextBox Text="{Binding FireResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdResWeight" />
                <TextBox Text="{Binding ColdResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningResWeight" />
                <TextBox Text="{Binding LightningResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosResWeight" />
                <TextBox Text="{Binding ChaosResWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="IntWeight" />
                <TextBox Text="{Binding IntWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="StrWeight" />
                <TextBox Text="{Binding StrWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DexWeight" />
                <TextBox Text="{Binding DexWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamagePercentWeight" />
                <TextBox Text="{Binding DamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="SpellDamage" />
                <TextBox Text="{Binding SpellDamage}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding PhysDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding FireDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamageFlaToAttackstWeight" />
                <TextBox Text="{Binding ColdDamageFlaToAttackstWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding LightningDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamageFlatToAttacksWeight" />
                <TextBox Text="{Binding ChaosDamageFlatToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding PhysDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding FireDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamageFlaToSpellstWeight" />
                <TextBox Text="{Binding ColdDamageFlaToSpellstWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding LightningDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamageFlatToSpellsWeight" />
                <TextBox Text="{Binding ChaosDamageFlatToSpellsWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDamagePercentWeight" />
                <TextBox Text="{Binding PhysDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDamagePercentWeight" />
                <TextBox Text="{Binding ColdDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDamagePercentWeight" />
                <TextBox Text="{Binding FireDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="LightningDamagePercentWeight" />
                <TextBox Text="{Binding LightningDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDamagePercentWeight" />
                <TextBox Text="{Binding ChaosDamagePercentWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ElementalDamagePercentToAttacksWeight" />
                <TextBox Text="{Binding ElementalDamagePercentToAttacksWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="CritMultiWeight" />
                <TextBox Text="{Binding CritMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="AttackSpeedWeight" />
                <TextBox Text="{Binding AttackSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="CastSpeedWeight" />
                <TextBox Text="{Binding CastSpeedWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageOverTimeWeight" />
                <TextBox Text="{Binding DamageOverTimeWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageWithBleedingWeight" />
                <TextBox Text="{Binding DamageWithBleedingWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="DamageWithPoisonWeight" />
                <TextBox Text="{Binding DamageWithPoisonWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ChaosDoTMultiWeight" />
                <TextBox Text="{Binding ChaosDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="FireDoTMultiWeight" />
                <TextBox Text="{Binding FireDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="ColdDoTMultiWeight" />
                <TextBox Text="{Binding ColdDoTMultiWeight}" />
              </WrapPanel>
              <WrapPanel>
                <Label Content="PhysDoTMultiWeight" />
                <TextBox Text="{Binding PhysDoTMultiWeight}" />
              </WrapPanel>
            </StackPanel>
          </Expander>
        </StackPanel>
      </TabItem>
      <TabItem Header="Gems">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <GroupBox Grid.Row="0" Grid.Column="1" Header="Helmet Gems" MinWidth="240" ToolTip="Gem names that bot should try to buy and equip in Helmet. Use FULL gem names! Example: Summon Phantasm Support.">
            <DataGrid MinWidth="240" CanUserResizeColumns="False" HorizontalAlignment="Left" HorizontalScrollBarVisibility="Hidden" AllowDrop="False" CanUserAddRows="True" CanUserReorderColumns="False" AutoGenerateColumns="False" ItemsSource="{Binding HelmetGems, Mode=TwoWay, NotifyOnTargetUpdated=True}">
              <DataGrid.Columns>
                <DataGridTextColumn Header="Name" MinWidth="240" Binding="{Binding Name, Mode=TwoWay, NotifyOnTargetUpdated=True}" />
              </DataGrid.Columns>
            </DataGrid>
          </GroupBox>
          <GroupBox Grid.Row="1" Grid.Column="1" Header="Body Armour Gems" MinWidth="240" Margin="0,0,0,40" ToolTip="Gem names that bot should try to buy and equip in Body Armour. Use FULL gem names! Example: Summon Phantasm Support.">
            <DataGrid MinWidth="240" CanUserResizeColumns="False" HorizontalAlignment="Left" HorizontalScrollBarVisibility="Hidden" AllowDrop="False" CanUserAddRows="True" CanUserReorderColumns="False" AutoGenerateColumns="False" ItemsSource="{Binding BodyArmourGems, Mode=TwoWay, NotifyOnTargetUpdated=True}">
              <DataGrid.Columns>
                <DataGridTextColumn Header="Name" MinWidth="240" Binding="{Binding Name, Mode=TwoWay, NotifyOnTargetUpdated=True}" />
              </DataGrid.Columns>
            </DataGrid>
          </GroupBox>
          <GroupBox Grid.Row="2" Grid.Column="0" Header="Gloves gems" ToolTip="Gem names that bot should try to buy and equip in Gloves. Use FULL gem names! Example: Summon Phantasm Support." MinWidth="240">
            <DataGrid MinWidth="240" CanUserResizeColumns="False" HorizontalAlignment="Left" HorizontalScrollBarVisibility="Hidden" AllowDrop="False" CanUserAddRows="True" CanUserReorderColumns="False" AutoGenerateColumns="False" ItemsSource="{Binding GlovesGems, Mode=TwoWay, NotifyOnTargetUpdated=True}">
              <DataGrid.Columns>
                <DataGridTextColumn Header="Name" MinWidth="240" Binding="{Binding Name, Mode=TwoWay, NotifyOnTargetUpdated=True}" />
              </DataGrid.Columns>
            </DataGrid>
          </GroupBox>
          <GroupBox Grid.Row="2" Grid.Column="2" Header="Boots gems" ToolTip="Gem names that bot should try to buy and equip in Boots. Use FULL gem names! Example: Summon Phantasm Support." MinWidth="240">
            <DataGrid MinWidth="240" CanUserResizeColumns="False" HorizontalAlignment="Left" HorizontalScrollBarVisibility="Hidden" AllowDrop="False" CanUserAddRows="True" CanUserReorderColumns="False" AutoGenerateColumns="False" ItemsSource="{Binding BootsGems, Mode=TwoWay, NotifyOnTargetUpdated=True}">
              <DataGrid.Columns>
                <DataGridTextColumn Header="Name" MinWidth="240" Binding="{Binding Name, Mode=TwoWay, NotifyOnTargetUpdated=True}" />
              </DataGrid.Columns>
            </DataGrid>
          </GroupBox>
          <GroupBox Grid.Row="1" Grid.Column="0" Header="Main Hand gems" ToolTip="Gem names that bot should try to buy and equip in Main Hand. Use FULL gem names! Example: Summon Phantasm Support." MinWidth="240" Margin="0,0,0,40">
            <DataGrid MinWidth="240" CanUserResizeColumns="False" HorizontalAlignment="Left" HorizontalScrollBarVisibility="Hidden" AllowDrop="False" CanUserAddRows="True" CanUserReorderColumns="False" AutoGenerateColumns="False" ItemsSource="{Binding MainHandGems, Mode=TwoWay, NotifyOnTargetUpdated=True}">
              <DataGrid.Columns>
                <DataGridTextColumn Header="Name" MinWidth="240" Binding="{Binding Name, Mode=TwoWay, NotifyOnTargetUpdated=True}" />
              </DataGrid.Columns>
            </DataGrid>
          </GroupBox>
          <GroupBox Grid.Row="1" Grid.Column="2" Header="Off-Hand gems" ToolTip="Gem names that bot should try to buy and equip in Off-Hand. Use FULL gem names! Example: Summon Phantasm Support." MinWidth="240" Margin="0,0,0,40">
            <DataGrid MinWidth="240" CanUserResizeColumns="False" HorizontalAlignment="Left" HorizontalScrollBarVisibility="Hidden" AllowDrop="False" CanUserAddRows="True" CanUserReorderColumns="False" AutoGenerateColumns="False" ItemsSource="{Binding OffHandGems, Mode=TwoWay, NotifyOnTargetUpdated=True}">
              <DataGrid.Columns>
                <DataGridTextColumn Header="Name" MinWidth="240" Binding="{Binding Name, Mode=TwoWay, NotifyOnTargetUpdated=True}" />
              </DataGrid.Columns>
            </DataGrid>
          </GroupBox>
        </Grid>
      </TabItem>
    </TabControl>
  </ScrollViewer>
</UserControl>